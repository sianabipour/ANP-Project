# Generated by Django 5.0.1 on 2024-01-23 18:55

import django.db.models.deletion
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('name_fa', models.CharField(max_length=150, verbose_name='name_fa')),
                ('name_en', models.CharField(max_length=150, verbose_name='name_en')),
                ('content_en', tinymce.models.HTMLField(verbose_name='content_en')),
                ('content_fa', tinymce.models.HTMLField(verbose_name='content_fa')),
                ('image_en', models.ImageField(upload_to='Category', verbose_name='image_en')),
                ('image_fa', models.ImageField(upload_to='Category', verbose_name='image_fa')),
                ('meta_description_fa', models.TextField(verbose_name='meta_description_fa')),
                ('meta_description_en', models.TextField(verbose_name='meta_description_en')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categorys',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_fa', models.CharField(max_length=150, verbose_name='name_fa')),
                ('name_en', models.CharField(max_length=150, verbose_name='name_en')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(verbose_name='slug')),
                ('title_fa', models.CharField(max_length=150, verbose_name='title_fa')),
                ('title_en', models.CharField(max_length=150, verbose_name='title_en')),
                ('content_fa', tinymce.models.HTMLField(verbose_name='content_fa')),
                ('content_en', tinymce.models.HTMLField(verbose_name='content_en')),
                ('image_fa', models.ImageField(upload_to='Blog', verbose_name='image_fa')),
                ('image_en', models.ImageField(upload_to='Blog', verbose_name='image_en')),
                ('date_update', models.DateField(auto_now=True, verbose_name='date_update')),
                ('date_create', models.DateField(auto_now_add=True, verbose_name='date_create')),
                ('meta_description_fa', models.TextField(verbose_name='meta_description_fa')),
                ('meta_description_en', models.TextField(verbose_name='meta_description_en')),
                ('views', models.IntegerField(default=0, verbose_name='views')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('tags', models.ManyToManyField(to='blog.tag', verbose_name='tags')),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=150, verbose_name='user')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('date_create', models.DateField(auto_now_add=True, verbose_name='date_create')),
                ('comment_description', models.TextField(verbose_name='comment_description')),
                ('published', models.BooleanField(default=False)),
                ('blog', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.blog')),
            ],
        ),
    ]
